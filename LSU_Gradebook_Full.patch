diff --git a/admin/settings/grades.php b/admin/settings/grades.php
index 90bc811..c95c5fd 100644
--- a/admin/settings/grades.php
+++ b/admin/settings/grades.php
@@ -23,6 +23,10 @@ if (has_capability('moodle/grade:manage', $systemcontext)
     $temp = new admin_settingpage('gradessettings', new lang_string('generalsettings', 'grades'), 'moodle/grade:manage');
     if ($ADMIN->fulltree) {
 
+        // BEGIN LSU Course Category Editable Patch
+        $temp->add(new admin_setting_configcheckbox('grade_coursecateditable', new lang_string('coursecateditable', 'grades'), new lang_string('coursecateditable_help', 'grades'), 1));
+        // END LSU Course Category Editable Patch
+
         // new CFG variable for gradebook (what roles to display)
         $temp->add(new admin_setting_special_gradebookroles());
 
@@ -185,9 +189,36 @@ if (has_capability('moodle/grade:manage', $systemcontext)
         $outcomes = new admin_externalpage('outcomes', new lang_string('outcomes', 'grades'), $CFG->wwwroot.'/grade/edit/outcome/index.php', 'moodle/grade:manage');
         $ADMIN->add('grades', $outcomes);
     }
-    $letters = new admin_externalpage('letters', new lang_string('letters', 'grades'), $CFG->wwwroot.'/grade/edit/letter/index.php', 'moodle/grade:manageletters');
+
+    // BEGIN LSU Better Letter Grades
+    $letters_str = new lang_string('letters', 'grades');
+    $letters_base = $CFG->wwwroot.'/grade/edit/letter';
+    $letters = new admin_externalpage('letters', $letters_str, $letters_base . '/index.php', 'moodle/grade:manageletters');
+    // END LSU Better Letter Grades
+
     $ADMIN->add('grades', $letters);
 
+    // BEGIN LSU Better Letter Grades
+    $letters_settings_str = new lang_string('letter', 'grades') . ' ' . new lang_string('edit') . ' ' . new lang_string('settings');
+    $temp = new admin_settingpage('letterssettings', $letters_settings_str, 'moodle/grade:manageletters');
+    if ($ADMIN->fulltree) {
+        $temp->add(new admin_setting_configcheckbox('grade_letters_strict',
+            new lang_string('lettersstrictletter', 'grades'), new lang_string('lettersstrictletter_help', 'grades'), 0));
+
+        $params = array('courseid' => 0);
+
+        $db_scales = $DB->get_records_menu('scale', $params, '', 'id, name');
+
+        $scales = array(0 => new lang_string('lettersdefaultletters', 'grades')) + $db_scales;
+
+        $temp->add(new admin_setting_configselect('grade_letters_names',
+            new lang_string('lettersnames', 'grades'),
+            new lang_string('lettersname_help', 'grades'), 0, $scales));
+    }
+
+    $ADMIN->add('grades', $temp);
+    // END LSU Better Letter Grades
+
     // The plugins must implement a settings.php file that adds their admin settings to the $settings object
 
     // Reports
diff --git a/grade/edit/letter/edit_form.php b/grade/edit/letter/edit_form.php
index ae103fb..f5018ff 100644
--- a/grade/edit/letter/edit_form.php
+++ b/grade/edit/letter/edit_form.php
@@ -31,6 +31,10 @@ require_once $CFG->libdir.'/formslib.php';
 class edit_letter_form extends moodleform {
 
     public function definition() {
+	// BEGIN LSU Better Letters
+	global $DB;
+	// END LSU Better Letters
+
         $mform =& $this->_form;
         $num   = $this->_customdata['num'];
         $admin = $this->_customdata['admin'];
@@ -46,16 +50,37 @@ class edit_letter_form extends moodleform {
         $gradeletter       = get_string('gradeletter', 'grades');
         $gradeboundary     = get_string('gradeboundary', 'grades');
 
+        // BEGIN LSU Better Letters
+        $strict = get_config('moodle', 'grade_letters_strict');
+
+        $default = get_config('moodle', 'grade_letters_names');
+
+        if ($default and $scale = $DB->get_record('scale', array('id' => $default))) {
+            $default_letters = $scale->scale;
+        } else {
+           $default_letters = get_string('lettersdefaultletters', 'grades');
+        }
+
+        $default_letters = array_reverse(explode(',', $default_letters));
+        $letters = array('' => get_string('unused', 'grades')) +
+            array_combine($default_letters, $default_letters);
+        // END LSU Better Letters
+
         for ($i=1; $i<$num+1; $i++) {
             $gradelettername = 'gradeletter'.$i;
             $gradeboundaryname = 'gradeboundary'.$i;
 
             $entry = array();
-            $entry[] = $mform->createElement('text', $gradelettername, $gradeletter . " $i");
+            if ($strict) {
+                $entry[] = $mform->createElement('select', $gradelettername, $gradeletter . " $i", $letters);
+            } else {
+                $entry[] = $mform->createElement('text', $gradelettername, $gradeletter . " $i");
+            }
             $mform->setType($gradelettername, PARAM_TEXT);
 
             if (!$admin) {
                 $mform->disabledIf($gradelettername, 'override', 'notchecked');
+                $mform->disabledIf($gradelettername, $gradeboundaryname, 'eq', -1);
             }
 
             $entry[] = $mform->createElement('static', '', '', '&ge;');
diff --git a/grade/edit/letter/index.php b/grade/edit/letter/index.php
index 025584b..b20577e 100644
--- a/grade/edit/letter/index.php
+++ b/grade/edit/letter/index.php
@@ -46,6 +46,10 @@ if (!$edit) {
 
 $returnurl = null;
 $editparam = null;
+$custom = true;
+$decimals = $custom ? (int) get_config('moodle', 'grade_decimalpoints') : 2;
+
+
 if ($context->contextlevel == CONTEXT_SYSTEM or $context->contextlevel == CONTEXT_COURSECAT) {
     require_once $CFG->libdir.'/adminlib.php';
     require_login();
@@ -86,11 +90,11 @@ if (!$edit) {
     $max = 100;
     foreach($letters as $boundary=>$letter) {
         $line = array();
-        $line[] = format_float($max,2).' %';
-        $line[] = format_float($boundary,2).' %';
+        $line[] = format_float($max, $decimals).' %';
+        $line[] = format_float($boundary, $decimals).' %';
         $line[] = format_string($letter);
         $data[] = $line;
-        $max = $boundary - 0.01;
+        $max = $boundary - (1 / pow(10, $decimals));
     }
 
     print_grade_page_head($COURSE->id, 'letter', 'view', get_string('gradeletters', 'grades'));
@@ -106,9 +110,9 @@ if (!$edit) {
     $table = new html_table();
     $table->id = 'grade-letters-view';
     $table->head  = array(get_string('max', 'grades'), get_string('min', 'grades'), get_string('letter', 'grades'));
-    $table->size  = array('30%', '30%', '40%');
+    $table->size  = array('33%', '33%', '34%');
     $table->align = array('left', 'left', 'left');
-    $table->width = '30%';
+    $table->width = '40%';
     $table->data  = $data;
     $table->tablealign  = 'center';
     echo html_writer::table($table);
@@ -125,8 +129,11 @@ if (!$edit) {
         $gradelettername = 'gradeletter'.$i;
         $gradeboundaryname = 'gradeboundary'.$i;
 
+
         $data->$gradelettername   = $letter;
         $data->$gradeboundaryname = $boundary;
+        $stored = "{$data->$gradeboundaryname}";
+        $letters[$stored] = $letter;
         $i++;
     }
     $data->override = $override;
diff --git a/grade/edit/tree/category_form.php b/grade/edit/tree/category_form.php
index 98a18a4..cbe1a78 100644
--- a/grade/edit/tree/category_form.php
+++ b/grade/edit/tree/category_form.php
@@ -391,7 +391,17 @@ class edit_category_form extends moodleform {
 
             // If it is a course category and its fullname is ?, show an empty field
             if ($grade_category->is_course_category() && $mform->getElementValue('fullname') == '?') {
-                $mform->setDefault('fullname', '');
+                // BEGIN LSU Course Category Editable Patch 
+                $editable = (bool) get_config('moodle', 'grade_coursecateditable');
+
+                // If it is a course category and its fullname is ?, show an empty field
+                if ($editable && $mform->getElementValue('fullname') == '?') {
+                    $mform->setDefault('fullname', '');
+                } else if (!$editable) {
+                    $mform->setDefault('fullname', $COURSE->fullname);
+                    $mform->hardFreeze('fullname');
+                }
+                // END LSU Course Category Editable Patch 
             }
             // remove unwanted aggregation options
             if ($mform->elementExists('aggregation')) {
diff --git a/grade/report/grader/lib.php b/grade/report/grader/lib.php
index 18e7c16..adebe56 100644
--- a/grade/report/grader/lib.php
+++ b/grade/report/grader/lib.php
@@ -1468,6 +1468,10 @@ class grade_report_grader extends grade_report {
                 }
             }
 
+            // BEGIN LSU Column Average No Zero
+            $no_grade_SQL = $meanselection == 2 ? ' AND g.finalgrade > 0 ': '';
+            // END LSU Column Average No Zero
+
             // MDL-10875 Empty grades must be evaluated as grademin, NOT always 0
             // This query returns a count of ungraded grades (NULL finalgrade OR no matching record in grade_grades table)
             $sql = "SELECT gi.id, COUNT(DISTINCT u.id) AS count
@@ -1478,7 +1482,7 @@ class grade_report_grader extends grade_report {
                       JOIN {role_assignments} ra
                            ON ra.userid = u.id
                       LEFT OUTER JOIN {grade_grades} g
-                           ON (g.itemid = gi.id AND g.userid = u.id AND g.finalgrade IS NOT NULL)
+                           ON (g.itemid = gi.id AND g.userid = u.id AND (g.finalgrade IS NOT NULL $no_grade_SQL))
                       $groupsql
                      WHERE gi.courseid = :courseid
                            AND ra.roleid $gradebookrolessql
@@ -1514,7 +1518,7 @@ class grade_report_grader extends grade_report {
                     $ungradedcount = $ungradedcounts[$itemid]->count;
                 }
 
-                if ($meanselection == GRADE_REPORT_MEAN_GRADED) {
+                if (($meanselection == GRADE_REPORT_MEAN_GRADED) || ($meanselection == GRADE_REPORT_MEAN_GRADED_NO_ZEROS)) {
                     $meancount = $totalcount - $ungradedcount;
                 } else { // Bump up the sum by the number of ungraded items * grademin
                     $sumarray[$item->id] += $ungradedcount * $item->grademin;
diff --git a/grade/report/grader/preferences_form.php b/grade/report/grader/preferences_form.php
index 241adf6..5ea74f8 100644
--- a/grade/report/grader/preferences_form.php
+++ b/grade/report/grader/preferences_form.php
@@ -86,7 +86,8 @@ class grader_report_preferences_form extends moodleform {
                                                                           0=>0, 1=>1, 2=>2, 3=>3, 4=>4, 5=>5);
                 $preferences['prefrows']['meanselection']  = array(GRADE_REPORT_PREFERENCE_DEFAULT => '*default*',
                                                                    GRADE_REPORT_MEAN_ALL => get_string('meanall', 'grades'),
-                                                                   GRADE_REPORT_MEAN_GRADED => get_string('meangraded', 'grades'));
+                                                                   GRADE_REPORT_MEAN_GRADED => get_string('meangraded', 'grades'),
+                                                                   GRADE_REPORT_MEAN_GRADED_NO_ZEROS => get_string('meangradednozeros', 'grades'));
 
                 $advanced = array_merge($advanced, array('averagesdisplaytype', 'averagesdecimalpoints'));
             }
diff --git a/grade/report/grader/settings.php b/grade/report/grader/settings.php
index 300543a..7a8ab48 100644
--- a/grade/report/grader/settings.php
+++ b/grade/report/grader/settings.php
@@ -47,7 +47,8 @@ if ($ADMIN->fulltree) {
     $settings->add(new admin_setting_configselect('grade_report_meanselection', get_string('meanselection', 'grades'),
                                               get_string('meanselection_help', 'grades'), GRADE_REPORT_MEAN_GRADED,
                                               array(GRADE_REPORT_MEAN_ALL => get_string('meanall', 'grades'),
-                                                    GRADE_REPORT_MEAN_GRADED => get_string('meangraded', 'grades'))));
+                                                    GRADE_REPORT_MEAN_GRADED => get_string('meangraded', 'grades'),
+                                                    GRADE_REPORT_MEAN_GRADED_NO_ZEROS => get_string('meangradednozeros', 'grades'))));
 
     $settings->add(new admin_setting_configcheckbox('grade_report_enableajax', get_string('enableajax', 'grades'),
                                                 get_string('enableajax_help', 'grades'), 0));
diff --git a/lang/en/grades.php b/lang/en/grades.php
index 584bf4c..1a5b3ce 100644
--- a/lang/en/grades.php
+++ b/lang/en/grades.php
@@ -456,6 +456,7 @@ $string['max'] = 'Highest';
 $string['maxgrade'] = 'Max grade';
 $string['meanall'] = 'All grades';
 $string['meangraded'] = 'Non-empty grades';
+$string['meangradednozeros'] = 'Non-empty, non-zero grades';
 $string['meanselection'] = 'Grades selected for column averages';
 $string['meanselection_help'] = 'This setting determines whether cells with no grade should be included when calculating the average (mean) for each category or grade item.';
 $string['median'] = 'Median';
@@ -813,6 +814,18 @@ $string['writinggradebookinfo'] = 'Writing gradebook settings';
 $string['xml'] = 'XML';
 $string['yes'] = 'Yes';
 $string['yourgrade'] = 'Your grade';
+$string['coursecateditable'] = 'Course category editable';
+$string['coursecateditable_help'] = 'Disabling will make the course category name an uneditable field.';
+
+// BEGIN LSU Better Letters
+$string['letterscustompercents'] = 'Custom Percentages';
+$string['letterscustompercents_help'] = 'Allows for users to enter a value for the percents.';
+$string['lettersdefaultletters'] = 'F,D,C,B,A';
+$string['lettersstrictletter'] = 'Strict Letter names';
+$string['lettersstrictletter_help'] = 'This setting forces the default letter names defined with the selected Letter names.';
+$string['lettersnames'] = 'Letter names';
+$string['lettersname_help'] = 'This setting forces the default letter names defined with this system scale. __Note__: The default letter names are A-F.';
+// END LSU Better Letters
 
 // Deprecated since 3.0.
 $string['categoriesanditems'] = 'Categories and items';
diff --git a/lib/grade/constants.php b/lib/grade/constants.php
index 662965e..ee6fb95 100644
--- a/lib/grade/constants.php
+++ b/lib/grade/constants.php
@@ -240,6 +240,11 @@ define('GRADE_REPORT_MEAN_ALL', 0);
 define('GRADE_REPORT_MEAN_GRADED', 1);
 
 /**
+ * GRADE_REPORT_MEAN_GRADED_NO_ZEROS - Only include grade items where the student has a grade greater than 0 when calculating the mean.
+ */
+define('GRADE_REPORT_MEAN_GRADED_NO_ZEROS', 2);
+
+/**
  * GRADE_NAVMETHOD_DROPDOWN - Display a drop down box to allow navigation within the gradebook
  */
 define('GRADE_NAVMETHOD_DROPDOWN', 0);
diff --git a/lib/gradelib.php b/lib/gradelib.php
index b790626..1ef866e 100644
--- a/lib/gradelib.php
+++ b/lib/gradelib.php
@@ -764,7 +764,7 @@ function grade_format_gradevalue($value, &$grade_item, $localized=true, $display
             return grade_format_gradevalue_percentage($value, $grade_item, $decimals, $localized);
 
         case GRADE_DISPLAY_TYPE_LETTER:
-            return grade_format_gradevalue_letter($value, $grade_item);
+            return grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized);
 
         case GRADE_DISPLAY_TYPE_REAL_PERCENTAGE:
             return grade_format_gradevalue_real($value, $grade_item, $decimals, $localized) . ' (' .
@@ -772,23 +772,23 @@ function grade_format_gradevalue($value, &$grade_item, $localized=true, $display
 
         case GRADE_DISPLAY_TYPE_REAL_LETTER:
             return grade_format_gradevalue_real($value, $grade_item, $decimals, $localized) . ' (' .
-                    grade_format_gradevalue_letter($value, $grade_item) . ')';
+                    grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized) . ')';
 
         case GRADE_DISPLAY_TYPE_PERCENTAGE_REAL:
             return grade_format_gradevalue_percentage($value, $grade_item, $decimals, $localized) . ' (' .
                     grade_format_gradevalue_real($value, $grade_item, $decimals, $localized) . ')';
 
         case GRADE_DISPLAY_TYPE_LETTER_REAL:
-            return grade_format_gradevalue_letter($value, $grade_item) . ' (' .
+            return grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized) . ' (' .
                     grade_format_gradevalue_real($value, $grade_item, $decimals, $localized) . ')';
 
         case GRADE_DISPLAY_TYPE_LETTER_PERCENTAGE:
-            return grade_format_gradevalue_letter($value, $grade_item) . ' (' .
+            return grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized) . ' (' .
                     grade_format_gradevalue_percentage($value, $grade_item, $decimals, $localized) . ')';
 
         case GRADE_DISPLAY_TYPE_PERCENTAGE_LETTER:
             return grade_format_gradevalue_percentage($value, $grade_item, $decimals, $localized) . ' (' .
-                    grade_format_gradevalue_letter($value, $grade_item) . ')';
+                    grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized) . ')';
         default:
             return '';
     }
@@ -845,7 +845,7 @@ function grade_format_gradevalue_percentage($value, $grade_item, $decimals, $loc
  * @param object $grade_item Grade item object
  * @return string
  */
-function grade_format_gradevalue_letter($value, $grade_item) {
+function grade_format_gradevalue_letter($value, $grade_item, $decimals, $localized) {
     global $CFG;
     $context = context_course::instance($grade_item->courseid, IGNORE_MISSING);
     if (!$letters = grade_get_letters($context)) {
@@ -858,6 +858,7 @@ function grade_format_gradevalue_letter($value, $grade_item) {
 
     $value = grade_grade::standardise_score($value, $grade_item->grademin, $grade_item->grademax, 0, 100);
     $value = bounded_number(0, $value, 100); // just in case
+    $value = format_float($value, $decimals, $localized);
 
     $gradebookcalculationsfreeze = 'gradebook_calculations_freeze_' . $grade_item->courseid;
 
