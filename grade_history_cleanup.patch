diff --git a/admin/settings/server.php b/admin/settings/server.php
index ec37e43..ce9ab01 100644
--- a/admin/settings/server.php
+++ b/admin/settings/server.php
@@ -152,6 +152,8 @@ $temp->add(new admin_setting_configselect('gradehistorylifetime', new lang_strin
                                                                                                      60 => new lang_string('numdays', '', 60),
                                                                                                      30 => new lang_string('numdays', '', 30))));
 
+$temp->add(new admin_setting_configtime('gradehistorylifetimestarthour', 'gradehistorylifetimetartminute', get_string('gradehistorylifetimestart', 'grades'), get_string('configgradehistorylifetimestart', 'grades'), array('h' => 1, 'm' => 15)));
+
 $ADMIN->add('server', $temp);
 
 
diff --git a/lang/en/grades.php b/lang/en/grades.php
index 9ea00eb..c20dafa 100644
--- a/lang/en/grades.php
+++ b/lang/en/grades.php
@@ -703,3 +703,6 @@ $string['writinggradebookinfo'] = 'Writing gradebook settings';
 $string['xml'] = 'XML';
 $string['yes'] = 'Yes';
 $string['yourgrade'] = 'Your grade';
+$string['configgradehistorylifetimestart'] = 'What time should the cronjob that does the grade history pruning <b>start</b>? Please specify different times if there are multiple Moodles on one physical server.';
+$string['gradehistorylifetimestart'] = 'Run At';
+
diff --git a/lib/gradelib.php b/lib/gradelib.php
index 75a6f20..aad3f6e 100644
--- a/lib/gradelib.php
+++ b/lib/gradelib.php
@@ -1383,15 +1383,48 @@ function grade_cron() {
     }
     $rs->close();
 
-    //TODO: do not run this cleanup every cron invocation
-    // cleanup history tables
-    if (!empty($CFG->gradehistorylifetime)) {  // value in days
-        $histlifetime = $now - ($CFG->gradehistorylifetime * 3600 * 24);
-        $tables = array('grade_outcomes_history', 'grade_categories_history', 'grade_items_history', 'grade_grades_history', 'scale_history');
-        foreach ($tables as $table) {
-            if ($DB->delete_records_select($table, "timemodified < ?", array($histlifetime))) {
-                mtrace("    Deleted old grade history records from '$table'");
+    // cleanup history tables occaisionally
+    if (!isset($CFG->gradehistorylifetime)) {  // value in days; we cannot choose a default for this
+        mtrace(sprintf("\n  [WARNING] No value set for '%s'...skipping grade history pruning.\n"
+		,get_string('gradehistorylifetime', 'grades')
+                ));
+
+    }elseif($CFG->gradehistorylifetime == 0){
+        mtrace(sprintf("\n  [INFO] Config '%s' is set to '%s'...skipping grade history pruning.\n",
+                get_string('gradehistorylifetime', 'grades'),
+                get_string('neverdeletehistory', 'grades')
+                ));
+	}else{  //we can proceed
+        require_once($CFG->dirroot.'/lib/statslib.php');
+        mtrace(sprintf("  Grade history retention policy '%s' is set to %s days\n  Checking for appropriate time"
+                , get_string('gradehistorylifetime', 'grades')
+                , $CFG->gradehistorylifetime
+                ));
+
+        //use default values quietly, if user has not set them in admin/server/cleanup
+        //@todo should we explicitly complain and tell the user that they have not set something? even though
+        //this condition SHOULD get caught when they try to run without having set a value for 'gradehistorylifetime'
+        $starthour = isset($CFG->gradehistorylifetimestarthour)   ? $CFG->gradehistorylifetimestarthour   : 10;
+        $startmin  = isset($CFG->gradehistorylifetimestartminute) ? $CFG->gradehistorylifetimestartminute : 0;
+
+        //setup time interval for cleanup to occur
+        $check_window_start = stats_get_base_daily() + $starthour*60*60 + $startmin*60;
+        $check_window_end = $check_window_start + 3600;
+
+        if ((time() > $check_window_start) && (time() < $check_window_end)) {
+            mtrace("  Begin grade history logs pruning");
+
+            $histlifetime = $now - ($CFG->gradehistorylifetime * 3600 * 24);
+            $tables = array('grade_outcomes_history', 'grade_categories_history', 'grade_items_history', 'grade_grades_history', 'scale_history');
+
+            foreach ($tables as $table) {
+                $DB->delete_records_select($table, "timemodified < ?", array($histlifetime));
+                mtrace("Deleted old grade history records from '$table'");
             }
+            mtrace("  Finished pruning grades history");
+        }else{
+            mtrace(sprintf("  NOT within the designated window for pruning grade history {%s - %s}...skipping.",
+                    strftime('%l:%M %P', $check_window_start), strftime('%l:%M %P', $check_window_end)));
         }
     }
 }
