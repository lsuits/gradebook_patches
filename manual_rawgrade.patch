diff --git a/admin/settings/grades.php b/admin/settings/grades.php
index 4d5d02e..c20c067 100644
--- a/admin/settings/grades.php
+++ b/admin/settings/grades.php
@@ -49,6 +49,16 @@ if (has_capability('moodle/grade:manage', $systemcontext)
         $temp->add(new admin_setting_configselect('grade_export_displaytype', new lang_string('gradeexportdisplaytype', 'grades'),
                                                   new lang_string('gradeexportdisplaytype_desc', 'grades'), GRADE_DISPLAY_TYPE_REAL, $display_types));
 
+        $temp->add(new admin_setting_configcheckbox('grade_item_manual_recompute',
+            new lang_string('gradeitemmanualrecompute', 'grades'),
+            new lang_string('gradeitemmanualrecompute_help', 'grades'), 0));
+
+        if ($CFG->grade_item_manual_recompute) {
+            $temp->add(new admin_setting_configcheckbox('manipulate_categories',
+                new lang_string('manipulatecategories', 'grades'),
+                new lang_string('manipulatecategories_help', 'grades'), 0));
+        }
+
         $temp->add(new admin_setting_configselect('grade_export_decimalpoints', new lang_string('gradeexportdecimalpoints', 'grades'),
                                                   new lang_string('gradeexportdecimalpoints_desc', 'grades'), 2,
                                                   array( '0' => '0',
diff --git a/grade/report/grader/db/upgrade.php b/grade/report/grader/db/upgrade.php
new file mode 100644
index 0000000..83de113
--- /dev/null
+++ b/grade/report/grader/db/upgrade.php
@@ -0,0 +1,35 @@
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Upgrade code for gradebook grader report.
+ *
+ * @package   gradereport_grader
+ * @copyright 2013 Moodle Pty Ltd (http://moodle.com)
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+function xmldb_gradereport_grader_upgrade($oldversion) {
+    global $CFG, $DB;
+    // Set rawgrade on manual grade items so that multiplicator and offset
+    // works on them like any other grade item.
+    $sql = "UPDATE  {grade_grades} gr, {grade_items} gi
+            SET     gr.rawgrade = gr.finalgrade
+            WHERE   gi.id = gr.itemid AND gi.itemtype = 'manual' AND gr.rawgrade IS NULL";
+    $DB->execute($sql);
+    upgrade_plugin_savepoint(true, 2016052301, 'gradereport', 'grader');
+    return true;
+}
diff --git a/grade/report/grader/lib.php b/grade/report/grader/lib.php
index adebe56..df63667 100644
--- a/grade/report/grader/lib.php
+++ b/grade/report/grader/lib.php
@@ -1036,6 +1036,11 @@ class grade_report_grader extends grade_report {
 
                 } else if ($USER->gradeediting[$this->courseid]) {
 
+                    // Editing means user edit manual item raw
+                    if ($item->is_manual_item() and $CFG->grade_item_manual_recompute) {
+                        $gradeval = $grade->rawgrade;
+                    }
+
                     if ($item->scaleid && !empty($scalesarray[$item->scaleid])) {
                         $itemcell->attributes['class'] .= ' grade_type_scale';
                     } else if ($item->gradetype == GRADE_TYPE_VALUE) {
diff --git a/grade/report/grader/version.php b/grade/report/grader/version.php
index 6dc49c2..89b21e3 100644
--- a/grade/report/grader/version.php
+++ b/grade/report/grader/version.php
@@ -24,6 +24,6 @@
 
 defined('MOODLE_INTERNAL') || die();
 
-$plugin->version   = 2016052300;        // The current plugin version (Date: YYYYMMDDXX)
+$plugin->version   = 2016052301;        // The current plugin version (Date: YYYYMMDDXX)
 $plugin->requires  = 2016051900;        // Requires this Moodle version
 $plugin->component = 'gradereport_grader'; // Full name of the plugin (used for diagnostics)
diff --git a/lang/en/grades.php b/lang/en/grades.php
index 838a2a3..fef172c 100644
--- a/lang/en/grades.php
+++ b/lang/en/grades.php
@@ -818,6 +818,10 @@ $string['coursecateditable'] = 'Course category editable';
 $string['coursecateditable_help'] = 'Disabling will make the course category name an uneditable field.';
 $string['droplow_limit'] = 'Drop the lowest limit';
 $string['droplow_limit_help'] = 'By applying this setting, the drop setting will be ignored until the number of droppable grades are > than the drop number.';
+$string['manipulatecategories'] = 'Manipulate category totals';
+$string['manipulatecategories_help'] = 'Curve and offset category totals';
+$string['gradeitemmanualrecompute'] = 'Manual item recompute';
+$string['gradeitemmanualrecompute_help'] = 'Allow the gradebook to automatically adjust the raw grade boundaries when editing the real grade boundaries for Manual items.<br /><strong>When enabled, you will have the option of manipulating category totals.</strong>';
 
 // BEGIN LSU Better Letters
 $string['letterscustompercents'] = 'Custom Percentages';
diff --git a/lib/grade/grade_item.php b/lib/grade/grade_item.php
index d7d0dec..8419d49 100644
--- a/lib/grade/grade_item.php
+++ b/lib/grade/grade_item.php
@@ -758,6 +758,14 @@ class grade_item extends grade_object {
                     continue;
                 }
 
+                // Manual item rawgrade might be recomputed
+                if ($this->is_manual_item() and $CFG->grade_item_manual_recompute) {
+                    $maxscale = ($this->grademax / $grade->rawgrademax);
+                    $grade->rawgrademax = $this->grademax;
+                    $grade->rawgrademin = $this->grademin;
+                    $grade->rawgrade = $this->bounded_grade($grade->rawgrade);
+                }
+
                 $grade->finalgrade = $this->adjust_raw_grade($grade->rawgrade, $grade->rawgrademin, $grade->rawgrademax);
 
                 if (grade_floats_different($grade_record->finalgrade, $grade->finalgrade)) {
@@ -804,9 +812,11 @@ class grade_item extends grade_object {
 
             // Standardise score to the new grade range
             // NOTE: skip if the activity provides a manual rescaling option.
-            $manuallyrescale = (component_callback_exists('mod_' . $this->itemmodule, 'rescale_activity_grades') !== false);
-            if (!$manuallyrescale && ($rawmin != $this->grademin or $rawmax != $this->grademax)) {
-                $rawgrade = grade_grade::standardise_score($rawgrade, $rawmin, $rawmax, $this->grademin, $this->grademax);
+            if ($this->itemtype != 'manual') {
+                $manuallyrescale = (component_callback_exists('mod_' . $this->itemmodule, 'rescale_activity_grades') !== false);
+                if (!$manuallyrescale && ($rawmin != $this->grademin or $rawmax != $this->grademax)) {
+                    $rawgrade = grade_grade::standardise_score($rawgrade, $rawmin, $rawmax, $this->grademin, $this->grademax);
+                }
             }
 
             // Apply other grade_item factors
@@ -1093,7 +1103,17 @@ class grade_item extends grade_object {
      * @return bool
      */
     public function is_raw_used() {
-        return ($this->is_external_item() and !$this->is_calculated() and !$this->is_outcome_item());
+        global $CFG;
+        if($CFG->manipulate_categories) {
+            $manipulatable_item = ($this->is_category_item() or $this->is_course_item());
+        } else {
+            $manipulatable_item = NULL;
+        }
+        if($CFG->grade_item_manual_recompute) {
+            return ($this->is_manual_item() or $this->is_external_item() or $manipulatable_item and !$this->is_calculated() and !$this->is_outcome_item());
+        } else {
+            return ($this->is_external_item() and !$this->is_calculated() and !$this->is_outcome_item());
+        }
     }
 
     /**
@@ -1750,6 +1770,14 @@ class grade_item extends grade_object {
             return false;
         }
 
+        // Manual Item raw-grade support
+        if ($this->is_manual_item()) {
+            return $this->update_raw_grade(
+                $userid, $finalgrade, $source, $feedback, $feedbackformat,
+                $usermodified, null, null, $grade
+            );
+        }
+
         $oldgrade = new stdClass();
         $oldgrade->finalgrade     = $grade->finalgrade;
         $oldgrade->overridden     = $grade->overridden;
