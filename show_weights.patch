diff --git a/grade/report/grader/lib.php b/grade/report/grader/lib.php
index c91394a..1f5a92a 100644
--- a/grade/report/grader/lib.php
+++ b/grade/report/grader/lib.php
@@ -95,6 +95,8 @@ class grade_report_grader extends grade_report {
      */
     protected $feedback_trunc_length = 50;
 
+    protected $weightedtotals = array();
+
     /**
      * Constructor. Sets local copies of user preferences and initialises grade_tree.
      * @param int $courseid
@@ -725,6 +727,8 @@ class grade_report_grader extends grade_report {
         );
         $jsscales = array();
 
+        $render_percents = $this->get_pref('showweightedpercents');
+
         foreach ($this->gtree->get_levels() as $key => $row) {
             $headingrow = new html_table_row();
             $headingrow->attributes['class'] = 'heading_name_row';
@@ -794,12 +798,16 @@ class grade_report_grader extends grade_report {
                     $itemcell = new html_table_cell();
                     $itemcell->attributes['class'] = $type . ' ' . $catlevel . ' highlightable'. ' i'. $element['object']->id;
 
+                    $percents = $render_percents ?
+                        $this->get_weighted_percents($element['object']) . '<br />': '';
+
                     if ($element['object']->is_hidden()) {
                         $itemcell->attributes['class'] .= ' dimmed_text';
                     }
 
                     $itemcell->colspan = $colspan;
-                    $itemcell->text = shorten_text($headerlink) . $arrow;
+                    $itemcell->text = $percents;
+                    $itemcell->text .= shorten_text($headerlink) . $arrow;
                     $itemcell->header = true;
                     $itemcell->scope = 'col';
 
@@ -1676,5 +1684,73 @@ class grade_report_grader extends grade_report {
     public function get_students_per_page() {
         return $this->get_pref('studentsperpage');
     }
+
+    public function get_weighted_percents($item) {
+        $parent = $item->get_parent_category();
+
+        if (!$parent or $item->is_course_item()) {
+            return '';
+        }
+
+        if ($item->is_category_item()) {
+            $parent = $parent->get_parent_category();
+        }
+
+        if (!$parent) {
+            return '';
+        }
+
+        $determine_weight = function($item) use ($parent) {
+            if ($parent->is_extracredit_used()) {
+                $discard_weight = (
+                    ($parent->aggregation != GRADE_AGGREGATE_WEIGHTED_MEAN &&
+                    $item->aggregationcoef > 0) or $item->aggregationcoef < 0 or $item->gradetype == 0 or $item->gradetype == 3
+                );
+
+                if ($discard_weight) return 0;
+            }
+
+            switch ($parent->aggregation) {
+                case GRADE_AGGREGATE_WEIGHTED_MEAN:
+                    return $item->aggregationcoef;
+                case GRADE_AGGREGATE_WEIGHTED_MEAN2:
+                    return $item->grademax - $item->grademin;
+                case GRADE_AGGREGATE_SUM:
+                    return $item->grademax;
+                default: return false;
+            }
+        };
+
+        $evaluated = $determine_weight($item);
+
+        if (empty($evaluated)) {
+            return '';
+        }
+
+        if (!isset($this->weightedtotals[$parent->id])) {
+            $total_weight = 0;
+
+            $grade_items = $parent->get_children();
+            foreach ($grade_items as $gid => $grade_item) {
+                if ($grade_item['type'] == 'category') {
+                    $item = $grade_item['object']->get_grade_item();
+                } else {
+                    $item = $grade_item['object'];
+                }
+
+                $total_weight += $determine_weight($item);
+            }
+
+            $this->weightedtotals[$parent->id] = $total_weight;
+        }
+
+        $decimals = $parent->get_grade_item()->get_decimals();
+
+        //if all weights are zero, we get div by 0 warnings...
+        $computed = $this->weightedtotals[$parent->id] == 0 ? 0 : $evaluated / $this->weightedtotals[$parent->id];
+
+        return ' (' . format_float($computed * 100, $decimals) . '%) ';
+    }
+
 }
 
diff --git a/grade/report/grader/preferences_form.php b/grade/report/grader/preferences_form.php
index ba2cb24..966bd44 100644
--- a/grade/report/grader/preferences_form.php
+++ b/grade/report/grader/preferences_form.php
@@ -111,6 +111,7 @@ class grader_report_preferences_form extends moodleform {
             $preferences['prefshow']['showactivityicons'] = $checkbox_default;
             $preferences['prefshow']['showranges'] = $checkbox_default;
             $preferences['prefshow']['showanalysisicon'] = $checkbox_default;
+            $preferences['prefshow']['showweightedpercents'] = $checkbox_default;
 
             if ($canviewhidden) {
                 $preferences['prefrows']['shownumberofgrades'] = $checkbox_default;
diff --git a/grade/report/grader/settings.php b/grade/report/grader/settings.php
index d1b02af..4064a8e 100644
--- a/grade/report/grader/settings.php
+++ b/grade/report/grader/settings.php
@@ -73,6 +73,9 @@ if ($ADMIN->fulltree) {
     $settings->add(new admin_setting_configcheckbox('grade_report_showanalysisicon', get_string('showanalysisicon', 'core_grades'),
                                                 get_string('showanalysisicon_desc', 'core_grades'), 1));
 
+    $settings->add(new admin_setting_configcheckbox('grade_report_showweightedpercents', get_string('showweightedpercents', 'grades'),
+        get_string('showweightedpercents_help', 'grades'), 0));
+
     $settings->add(new admin_setting_configcheckbox('grade_report_showuserimage', get_string('showuserimage', 'grades'),
                                                 get_string('showuserimage_help', 'grades'), 1));
 
diff --git a/lang/en/grades.php b/lang/en/grades.php
index 9ea00eb..039b3a4 100644
--- a/lang/en/grades.php
+++ b/lang/en/grades.php
@@ -588,6 +588,8 @@ $string['showrange'] = 'Show ranges';
 $string['showrange_help'] = 'Show the range column?';
 $string['showweight'] = 'Show weightings';
 $string['showweight_help'] = 'Show the grade weight column?';
+$string['showweightedpercents'] = 'Show weighted percents';
+$string['showweightedpercents_help'] = "Show the item's weight in percent of a weighted category type.";
 $string['rangedecimals'] = 'Range decimal points';
 $string['rangedecimals_help'] = 'The number of decimal points to display for range.';
 $string['showactivityicons'] = 'Show activity icons';
